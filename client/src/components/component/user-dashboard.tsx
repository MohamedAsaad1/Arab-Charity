/**
 * This code was generated by v0 by Vercel.
 */
import { Button } from "@/components/ui/button"
import { DropdownMenuTrigger, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuItem, DropdownMenuContent, DropdownMenu } from "@/components/ui/dropdown-menu"
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"
// import { ResponsiveBar } from "@nivo/bar"
import { Checkbox } from "@/components/ui/checkbox"
import Image from "next/image"
export function UserDashboard() {
  return (
    <div className="flex min-h-screen bg-gray-100/40 dark:bg-gray-800/40">
      <div className="hidden border-r lg:block dark:border-gray-800">
        <div className="flex h-full w-60 border-gray-200 ">
          <div className="flex flex-col w-60">
            <div className="flex h-14 items-center border-b px-4">
              <Button className="rounded-full w-8 h-8 border" size="icon" variant="ghost">
                <Package2Icon className="h-6 w-6" />
                <span className="sr-only">Toggle sidebar</span>
              </Button>
              <Button className="rounded-full ml-auto w-8 h-8" size="icon" variant="ghost">
                <LogOutIcon className="h-6 w-6" />
                <span className="sr-only">Logout</span>
              </Button>
            </div>
            <div className="flex-1 overflow-auto py-2">
              <div className="flex flex-col gap-2 px-2">
                <Button className="rounded-lg w-10 h-10 p-1.5" size="icon" variant="ghost">
                  <HomeIcon className="w-4 h-4" />
                  <span className="sr-only">Home</span>
                </Button>
                <Button className="rounded-lg w-10 h-10 p-1.5" size="icon" variant="ghost">
                  <ShoppingCartIcon className="w-4 h-4" />
                  <span className="sr-only">Orders</span>
                </Button>
                <Button className="rounded-lg bg-gray-100 w-10 h-10 p-1.5" size="icon" variant="ghost">
                  <PackageIcon className="w-4 h-4" />
                  <span className="sr-only">Products</span>
                </Button>
                <Button className="rounded-lg w-10 h-10 p-1.5" size="icon" variant="ghost">
                  <UsersIcon className="w-4 h-4" />
                  <span className="sr-only">Customers</span>
                </Button>
                <Button className="rounded-lg w-10 h-10 p-1.5" size="icon" variant="ghost">
                  <LineChartIcon className="w-4 h-4" />
                  <span className="sr-only">Analytics</span>
                </Button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div className="flex-1 flex flex-col w-full">
        <header className="flex h-14 items-center gap-4 border-b px-4 bg-white dark:bg-gray-950">
          <Button className="rounded-full w-10 h-10" size="icon" variant="ghost">
            <Image
              alt="Logo"
              className="rounded-full"
              height="40"
              src="/placeholder.svg"
              style={{
                aspectRatio: "40/40",
                objectFit: "cover",
              }}
              width="40"
            />
            <span className="sr-only">Toggle sidebar</span>
          </Button>
          <div className="flex-1" />
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button
                className="rounded-full border border-gray-200 w-8 h-8 dark:border-gray-800"
                size="icon"
                variant="ghost"
              >
                <Image
                  alt="Avatar"
                  className="rounded-full"
                  height="32"
                  src="/placeholder.svg"
                  style={{
                    aspectRatio: "32/32",
                    objectFit: "cover",
                  }}
                  width="32"
                />
                <span className="sr-only">Toggle user menu</span>
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end">
              <DropdownMenuLabel>My Account</DropdownMenuLabel>
              <DropdownMenuSeparator />
              <DropdownMenuItem>Settings</DropdownMenuItem>
              <DropdownMenuItem>Support</DropdownMenuItem>
              <DropdownMenuSeparator />
              <DropdownMenuItem>Logout</DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
        </header>
        <div className="flex-1 overflow-auto p-4">
          <div className="flex items-start gap-4">
            <div className="flex items-center gap-4">
              <Image
                alt="Avatar"
                className="rounded-full"
                height="80"
                src="/placeholder.svg"
                style={{
                  aspectRatio: "80/80",
                  objectFit: "cover",
                }}
                width="80"
              />
              <div className="flex flex-col">
                <h1 className="font-semibold text-lg">Alice Freeman</h1>
                <p className="text-sm text-gray-500 dark:text-gray-400">alice.freeman@example.com</p>
              </div>
            </div>
            <Button className="ml-auto" size="sm">
              Upgrade to Pro
            </Button>
          </div>
          <div className="grid gap-4 md:grid-cols-2 xl:grid-cols-4">
            <Card>
              <CardHeader>
                <CardTitle>Calendar</CardTitle>
                <CardDescription>Upcoming events</CardDescription>
              </CardHeader>
              <CardContent className="h-[200px] flex items-center justify-center">
                {/* <BarChart className="w-full aspect-[2/1]" /> */}
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>To-Do List</CardTitle>
                <CardDescription>Tasks for the day</CardDescription>
              </CardHeader>
              <CardContent>
                <ul className="grid gap-2">
                  <li className="flex items-center gap-2">
                    <Checkbox id="todo-1" />
                    <label htmlFor="todo-1">Complete the user onboarding guide</label>
                  </li>
                  <li className="flex items-center gap-2">
                    <Checkbox id="todo-2" />
                    <label htmlFor="todo-2">Review the latest product roadmap</label>
                  </li>
                  <li className="flex items-center gap-2">
                    <Checkbox id="todo-3" />
                    <label htmlFor="todo-3">Send feedback to the engineering team</label>
                  </li>
                </ul>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Recent Activity</CardTitle>
                <CardDescription>Latest updates</CardDescription>
              </CardHeader>
              <CardContent>
                <ul className="grid gap-2 text-sm">
                  <li>
                    <CheckIcon className="w-4 h-4 mr-1 inline-block" />
                    Completed the user onboarding guide
                  </li>
                  <li>
                    <CheckIcon className="w-4 h-4 mr-1 inline-block" />
                    Reviewed the latest product roadmap
                  </li>
                  <li>
                    <CheckIcon className="w-4 h-4 mr-1 inline-block" />
                    Sent feedback to the engineering team
                  </li>
                </ul>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  )
}


function Package2Icon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z" />
      <path d="m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9" />
      <path d="M12 3v6" />
    </svg>
  )
}


function LogOutIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" />
      <polyline points="16 17 21 12 16 7" />
      <line x1="21" x2="9" y1="12" y2="12" />
    </svg>
  )
}


function HomeIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
      <polyline points="9 22 9 12 15 12 15 22" />
    </svg>
  )
}


function ShoppingCartIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="8" cy="21" r="1" />
      <circle cx="19" cy="21" r="1" />
      <path d="M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12" />
    </svg>
  )
}


function PackageIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m7.5 4.27 9 5.15" />
      <path d="M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z" />
      <path d="m3.3 7 8.7 5 8.7-5" />
      <path d="M12 22V12" />
    </svg>
  )
}


function UsersIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" />
      <circle cx="9" cy="7" r="4" />
      <path d="M22 21v-2a4 4 0 0 0-3-3.87" />
      <path d="M16 3.13a4 4 0 0 1 0 7.75" />
    </svg>
  )
}


function LineChartIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 3v18h18" />
      <path d="m19 9-5 5-4-4-3 3" />
    </svg>
  )
}


// function BarChart(props) {
//   return (
//     <div {...props}>
//       <ResponsiveBar
//         data={[
//           { name: "Jan", count: 111 },
//           { name: "Feb", count: 157 },
//           { name: "Mar", count: 129 },
//           { name: "Apr", count: 150 },
//           { name: "May", count: 119 },
//           { name: "Jun", count: 72 },
//         ]}
//         keys={["count"]}
//         indexBy="name"
//         margin={{ top: 0, right: 0, bottom: 40, left: 40 }}
//         padding={0.3}
//         colors={["#2563eb"]}
//         axisBottom={{
//           tickSize: 0,
//           tickPadding: 16,
//         }}
//         axisLeft={{
//           tickSize: 0,
//           tickValues: 4,
//           tickPadding: 16,
//         }}
//         gridYValues={4}
//         theme={{
//           tooltip: {
//             chip: {
//               borderRadius: "9999px",
//             },
//             container: {
//               fontSize: "12px",
//               textTransform: "capitalize",
//               borderRadius: "6px",
//             },
//           },
//           grid: {
//             line: {
//               stroke: "#f3f4f6",
//             },
//           },
//         }}
//         tooltipLabel={({ id }) => `${id}`}
//         enableLabel={false}
//         role="application"
//         ariaLabel="A bar chart showing data"
//       />
//     </div>
//   )
// }


function CheckIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polyline points="20 6 9 17 4 12" />
    </svg>
  )
}
